import hou

def master_slave_subnet():
    # Get the selected nodes
    selected_nodes = hou.selectedNodes()

    if len(selected_nodes) < 2:
        hou.ui.displayMessage("Please select at least two subnets: one master and at least one slave.")
        return

    # The first selected node is the master
    master_node = selected_nodes[0]
    slaves = selected_nodes[1:]

    # Get the parent of the master node (all nodes should ideally share the same parent)
    parent = master_node.parent()

    for slave in slaves:
        # Get the name and position of the slave node
        slave_name = slave.name()
        slave_position = slave.position()

        # Delete the slave node
        slave.destroy()

        # Duplicate the master node
        duplicated_node = master_node.copyTo(parent)

        # Rename the duplicated node to the slave's original name
        duplicated_node.setName(slave_name, unique_name=True)

        # Set the duplicated node's position to the slave's original position
        duplicated_node.setPosition(slave_position)

    hou.ui.displayMessage("Operation completed: Master duplicated, renamed, and moved for all slaves.")

# Run the function
master_slave_subnet()
